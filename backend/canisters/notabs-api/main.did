service: () -> {
    createCollection: (principal, record {name:text; tags:vec text; private:bool}) -> (variant {Ok:principal; Err:variant {WorkspaceNameAlreadyExists:text; CollectionDoesNotExist:principal; UsernameAlreadyExists:text; WorkspaceDoesNotExist:principal; UnknownError:text; UserNotAuthenticated:principal; WorkspaceDoesNotHaveThisMember:principal; UserDoesNotExist:principal}});
    createUser: (record {username:text}) -> (variant {Ok:bool; Err:variant {WorkspaceNameAlreadyExists:text; CollectionDoesNotExist:principal; UsernameAlreadyExists:text; WorkspaceDoesNotExist:principal; UnknownError:text; UserNotAuthenticated:principal; WorkspaceDoesNotHaveThisMember:principal; UserDoesNotExist:principal}});
    createWorkspace: (record {members:vec record {id:principal; role:variant {Member; Admin; Owner}}; name:text}) -> (variant {Ok:principal; Err:variant {WorkspaceNameAlreadyExists:text; CollectionDoesNotExist:principal; UsernameAlreadyExists:text; WorkspaceDoesNotExist:principal; UnknownError:text; UserNotAuthenticated:principal; WorkspaceDoesNotHaveThisMember:principal; UserDoesNotExist:principal}});
    getProfile: () -> (variant {Ok:record {id:principal; username:text; createdAt:nat64; follow:vec principal}; Err:variant {WorkspaceNameAlreadyExists:text; CollectionDoesNotExist:principal; UsernameAlreadyExists:text; WorkspaceDoesNotExist:principal; UnknownError:text; UserNotAuthenticated:principal; WorkspaceDoesNotHaveThisMember:principal; UserDoesNotExist:principal}}) query;
    getWorkspaces: () -> (variant {Ok:vec record {role:variant {Member; Admin; Owner}; workspace:record {id:principal; members:vec record {id:principal; role:variant {Member; Admin; Owner}}; name:text; createdAt:nat64; createdBy:principal; scope:variant {Team; Personal}}}; Err:variant {WorkspaceNameAlreadyExists:text; CollectionDoesNotExist:principal; UsernameAlreadyExists:text; WorkspaceDoesNotExist:principal; UnknownError:text; UserNotAuthenticated:principal; WorkspaceDoesNotHaveThisMember:principal; UserDoesNotExist:principal}}) query;
}
